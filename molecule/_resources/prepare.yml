---

- name: Prepare hosts
  hosts: all
  gather_facts: yes
  tasks:
    - name: "Display kernel version"
      debug:
        var: ansible_kernel_version
    - name: "Display OS version #1"
      slurp:
        src: "{{ (ansible_os_family == 'Debian') | ternary('/etc/debian_version', '/etc/redhat-release') }}"
      ignore_errors: True
      changed_when: False
      register: os_version
    - name: "Display OS version #1"
      debug:
        msg: "{{ os_version['content'] | b64decode }}"
    # to ensure having a real FQDN
    # (dots are not allowed in LXD container names, thus sticking to short names)
    - name: set proper hostname
      hostname:
        name: "{{ ansible_nodename }}.example.com"
      # using the `hostname` instantiation parameter for Docker, as /etc/hostname cannot be modified
      when: ansible_virtualization_type != 'docker' and 'example.com' not in ansible_fqdn
    # may cause TLS issues when downloading packages later
    - name: Ensure ca-certificates is up-to-date
      package:
        name: ca-certificates
        state: latest
    - name: Install needed tools (RedHat)
      package:
        name: "{{ base_packages[ansible_os_family] }}"
    - name: "Prepare Firewall"
      block:
        - name: "Install Firewalld"
          package:
            name: firewalld
        - name: "Start Firewalld"
          service:
            name: firewalld
            state: started
            enabled: yes
      when: manage_firewall|default(True) and ansible_os_family == "RedHat"

- import_playbook: prepare_custom.yml

